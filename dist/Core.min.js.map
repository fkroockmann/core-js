{"version":3,"file":"Core.min.js","sources":["../src/Core/Api.js","../src/Core/Utils.js","../src/Core/ApplicationContainer.js","../src/Core/ControllerManager.js","../src/Core/ApplicationManager.js","../src/Core/Mediator.js","../src/Core/RouteManager.js","../src/Core/Exception.js","../src/Core/Scope.js","../src/Core/Config.js","../src/Core.js","../src/Core/DriverHandler.js","../src/Core/Renderer.js","../src/Core/Request.js","../src/Core/Response.js","../src/Core/RequestHandler.js","../src/Core/RestDriver.js"],"names":["define","container","api","register","ctn","object","this","hasOwnProperty","set","Mediator","publish","get","unset","jQuery","Api","SmartList","config","dataContainer","itemCount","idKey","maxEntry","onChange","onDestroy","onInit","onAdd","onReplace","onDelete","init","name","Date","getTime","data","parseInt","setData","getSize","prototype","setMaxEntry","key","value","isPlainObject","bound","destroy","self","reset","getData","toArray","clear","cleanData","each","push","makeArray","replaceItem","item","arguments","length","deleteItem","deleteItemById","identifier","isArray","i","addData","items","extend","requireWithPromise","dep","keepRequireContext","def","Deferred","splice","require","req","resolve","call","reason","reject","apply","promise","castAsArray","values","Object","Array","keys","map","coreApi","AppContainer","instance","JS","Class","initialize","applicationInfos","exception","getByAppInfosName","result","appInfos","getInstance","utils","appContainer","controllerContainer","shortNameMap","controllerInstance","enabledController","code","message","AbstractController","state","enabled","appName","mainApp","handleImport","imports","done","fail","error","method","beforeCall","callName","dfd","undefined","then","silent","service","depencies","onEnabled","onDisabled","invoke","action","params","actionName","getName","e","updateEnabledController","currentController","computeControllerName","controllerName","ctlName","controllerPos","indexOf","substring","toLowerCase","initController","fullControllerName","getControllerShortName","controllerFullName","controllerNameInfos","split","registerController","ControllerDef","controllerShortName","Constructor","callSuper","constructor","originalName","loadController","cInstance","loadControllerByShortName","shortControllerName","completeControllerName","controllerInfos","ctlFileName","getAppControllers","ControllerManager","getAllControllers","underscore","Backbone","Utils","AppDefContainer","currentApplication","ApplicationManager","AbstractApplication","Events","getMainRoute","mainRoute","exposeMenu","dispatchToController","controller","rest","invokeControllerService","serviceName","unshift","setControllerMng","controllerMng","onStart","trigger","onStop","onResume","onError","registerApplication","appname","AppDef","ApplicationConstructor","registerAppRoutes","routes","launchApplication","Application","load","launchApp","doLaunchApp","completeAppname","appsAreLoaded","activeAppConf","applications","active","app","off","handleAppLoadingErrors","configuration","routePaths","routeName","appModuleName","appPaths","size","appConfig","appPath","routePath","scope","methods","Scope","subscribe","open","invokeService","close","proxy","actionInfos","appPromise","application","getAppInstance","appInstance","servicePath","serviceInfos","merge","shift","Component","callback","context","topics","publicated","subscribe_once","execute","topic","component","args","subscribeOnce","unsubscribe","slice","persistentPublish","removePublish","Core","BackBone","routesCollections","Router","ExtRouter","mainRouter","handleApplicationLinks","url","routeInfos","delegate","preventDefault","buildLink","navigate","linkParams","link","defaults","replace","path","triggerEvent","updateRoute","conf","genericRouteHandler","pop","registerRoute","actionsName","completeName","route","routerInstance","RouteManager","initRouter","history","start","routeConf","prefix","navigateByPath","navigateByName","Exception","stack","getStack","err","Error","cleanStack","parseStackLine","pushError","stackline","regex","exec","file","line","column","throwNewException","expected","Under","scopes","toggle","opening","checkScope","isOpen","openingScopes","difference","closingScopes","union","index","without","openingCallback","closingCallback","injectCoreConfig","setImutable","obj","freeze","initConfig","core","find","sections","section","getConfig","namespace","reverse","us","DriverHandler","AVAILABLE_ACTIONS","drivers","defaultDriverId","mappings","hasDriver","id","contains","addDriver","driver","isDefault","defaultDriver","getDriver","addActionDriverMapping","type","row","isValidActionDriverMapping","create","doGenericAction","read","criteria","orderBy","limit","formatData","update","delete","patch","getDriversByTypeAndAction","response","console","log","handle","Singleton","nunjucks","Renderer","error_tpl","placeholder","env","configure","watch","engine","render_action","error_msg","clone","functions","getEngine","addFilter","func","async","addFunction","mergeParameters","asyncRender","onTemplateReady","errorRenderer","render","template","renderString","engineException","initRenderer","invokeMethod","method_name","ApiRender","Request","headers","Content-Type","setUrl","setMethod","toUpperCase","setHeaders","addHeader","setContentType","contentType","getUrl","getContentType","getMethod","getHeader","getHeaders","Response","rawData","status","statusText","errorText","getRawData","getStatus","getStatusText","getErrorText","getUidFromLocation","res","locationHeader","RegExp","getRangeFrom","rangeHeader","getRangeTo","res2","getRangeTotal","setRawData","setStatus","setStatusText","setErrorText","Underscore","CoreResponse","RequestHandler","send","request","ajax","textStatus","xhr","buildResponse","getAllResponseHeaders","responseText","errorThrown","buildHeaders","headersSplit","header","identifierPos","trim","URI","RestDriver","baseUrl","setBaseUrl","range","segment","computeCriteria","computePatchOperations","computeOrderBy","normalize","toString","JSON","stringify","criterion","addSearch","order","operations","op"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Api', [], function () {\n    'use strict';\n\n    var container = {},\n\n        api = {\n            register:  function (ctn, object) {\n                if (this.hasOwnProperty(ctn)) {\n                    return;\n                }\n                this[ctn] = object;\n            },\n\n            set: function (ctn, object) {\n                this.Mediator.publish('api:set:' + ctn, object);\n                container[ctn] = object;\n            },\n\n            get: function (ctn) {\n                return container[ctn];\n            },\n\n            unset: function (ctn) {\n                container[ctn] = null;\n                delete container[ctn];\n            }\n        };\n\n    return api;\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Utils', ['jquery', 'Core/Api'], function (jQuery, Api) {\n    'use strict';\n    /**\n     * Simple data container with action events\n     * Events : [onInit, onAdd, onChange, onReplace, onDestroy, onDelete]\n     *\n     **/\n    var SmartList = function SmartList(config) {\n            this.dataContainer = {};\n            this.itemCount = 0;\n            this.idKey = null;\n            this.maxEntry = null;\n            /*events*/\n            this.onChange = function () {\n                return;\n            };\n            this.onDestroy = function () {\n                return;\n            };\n            this.onInit = function () {\n                return;\n            };\n            this.onAdd = function () {\n                return;\n            };\n            this.onReplace = function () {\n                return;\n            };\n            this.onDelete = function () {\n                return;\n            };\n            if (typeof this.init !== 'function') {\n                this.init = function (config) {\n                    if (config && !config.hasOwnProperty(\"idKey\")) {\n                        throw \"SmartList:init if a config param is provided a config.idKey is expected\";\n                    }\n                    config = config || {};\n                    this.name = config.name || 'list_' + new Date().getTime();\n                    var data = config.data || {};\n                    this.onChange = ((typeof config.onChange === 'function') ? config.onChange : this.onChange);\n                    this.onDestroy = ((typeof config.onDestroy === 'function') ? config.onDestroy : this.onDestroy);\n                    if (config.idKey) {\n                        this.idKey = config.idKey;\n                    }\n                    this.onInit = ((typeof config.onInit === 'function') ? config.onInit : this.onInit);\n                    this.onAdd = ((typeof config.onAdd === 'function') ? config.onAdd : this.onAdd);\n                    this.onReplace = ((typeof config.onReplace === 'function') ? config.onReplace : this.onReplace);\n                    this.onDelete = ((typeof config.onDelete === 'function') ? config.onDelete : this.onDelete);\n                    if (config.maxEntry) {\n                        this.maxEntry = parseInt(config.maxEntry, 10);\n                    }\n                    this.setData(data);\n                    this.itemCount = this.getSize();\n                };\n            }\n            /**\n             * Set max entry into the Smartlist\n             * @param {number} maxEntry [max entry authorized]\n             */\n            SmartList.prototype.setMaxEntry = function (maxEntry) {\n                this.maxEntry = maxEntry || null;\n            };\n            /**\n             * Setter\n             * @param {string} key   [value identifier]\n             * @param {mixed}  value [value]\n             */\n            SmartList.prototype.set = function (key, value) {\n                if (this.idKey && !jQuery.isPlainObject(key)) {\n                    throw \"SmartList:set item should be an object when and idKey is set\";\n                }\n                if (this.idKey && jQuery.isPlainObject(key)) {\n                    if (!key.hasOwnProperty(this.idKey)) {\n                        throw \"SmartList:set should have a key \" + this.idKey;\n                    }\n                    value = key;\n                    key = key[this.idKey];\n                }\n\n                if (!this.dataContainer.hasOwnProperty(key)) {\n                    var bound = this.itemCount + 1;\n                    if (this.maxEntry && (bound > this.maxEntry)) {\n                        return;\n                    }\n                    this.itemCount = bound;\n                }\n                this.dataContainer[key] = value;\n                this.onChange(this.dataContainer, this.name, value);\n            };\n            /**\n             * Getter\n             * @param  {string} key [value identifier]\n             * @return {mixed}      [value]\n             */\n            SmartList.prototype.get = function (key) {\n                return this.dataContainer[key] || false;\n            };\n            /**\n             * Destroy the Smartlist\n             */\n            SmartList.prototype.destroy = function () {\n                var self = this;\n                this.dataContainer = {};\n                this.itemCount = 0;\n                this.onDestroy(self);\n            };\n            /**\n             * Reset the Smartlist\n             */\n            SmartList.prototype.reset = function () {\n                this.destroy();\n            };\n            /**\n             * Get all datas\n             * @return {object} [the data container]\n             */\n            SmartList.prototype.getData = function () {\n                return this.dataContainer;\n            };\n            /**\n             * Transform the data container into an Array\n             * @param  {boolean} clear [true if you want a clean array]\n             * @return {array}         [data conainer as array]\n             */\n            SmartList.prototype.toArray = function (clear) {\n                var self = this,\n                    cleanData = [];\n                if (clear) {\n                    jQuery.each(this.dataContainer, function (key) {\n                        cleanData.push(self.dataContainer[key]);\n                    });\n                } else {\n                    cleanData = jQuery.makeArray(this.dataContainer);\n                }\n                return cleanData;\n            };\n            /**\n             * Replace item\n             * @param  {[type]} item [description]\n             * @return {[type]}      [description]\n             */\n            SmartList.prototype.replaceItem = function (item) {\n                if (!arguments.length) {\n                    throw \"SmartList:replaceItem expects one parameter\";\n                }\n                if (!item.hasOwnProperty(this.idKey)) {\n                    throw \"SmartList:deleteItem [item] should have a [\" + this.idKey + \"] key\";\n                }\n                this.dataContainer[item[this.idKey]] = item;\n                this.onReplace(this.dataContainer, this.name, item);\n            };\n            /**\n             * Delete Item\n             * @param  {[type]} item [description]\n             * @return {[type]}      [description]\n             */\n            SmartList.prototype.deleteItem = function (item) {\n                if (!arguments.length) {\n                    throw \"SmartList:replaceItem expects one parameter\";\n                }\n                if (!jQuery.isPlainObject(item)) {\n                    throw \"SmartList:deleteItem [item] should be a object\";\n                }\n                if (!item.hasOwnProperty(this.idKey)) {\n                    throw \"SmartList:deleteItem [item] should have a [\" + this.idKey + \"] key\";\n                }\n                delete this.dataContainer[item[this.idKey]];\n                this.itemCount = this.itemCount - 1;\n                this.onDelete(this.dataContainer, this.name, item);\n            };\n            /**\n             * Delete item by identifier\n             * @param  {string} identifier [description]\n             */\n            SmartList.prototype.deleteItemById = function (identifier) {\n                if (!this.dataContainer.hasOwnProperty(identifier)) {\n                    return false;\n                }\n                delete this.dataContainer[identifier];\n                this.itemCount = this.itemCount - 1;\n                this.onDelete(this.dataContainer, this.name, identifier);\n            };\n            /**\n             * Set data\n             * @param {mixed}  data  [Data to store]\n             */\n            SmartList.prototype.setData = function (data) {\n                var item,\n                    self = this;\n                if (!data) {\n                    throw \"SmartList:setData data must be provided\";\n                }\n                if (jQuery.isArray(data)) {\n                    if (!this.idKey) {\n                        throw \"SmartList:setData idKey must be provided\";\n                    }\n                    jQuery.each(data, function (i) {\n                        item = data[i];\n                        if (item.hasOwnProperty(self.idKey)) {\n                            self.set(item);\n                        }\n                    });\n                } else {\n                    this.dataContainer = data;\n                }\n                this.onInit(this.dataContainer);\n            };\n            /**\n             * Add data\n             * @param {mixed} data [Data to store]\n             */\n            SmartList.prototype.addData = function (data) {\n                var self = this,\n                    item,\n                    items = [];\n                if (jQuery.isArray(data)) {\n                    if (!this.idKey) {\n                        throw \"SmartList:addData idKey must be provided\";\n                    }\n                    jQuery.each(data, function (i) {\n                        item = data[i];\n                        if (item.hasOwnProperty(self.idKey)) {\n                            self.set(item);\n                            items.push(item);\n                        }\n                    });\n                } else {\n                    this.dataContainer = jQuery.extend(true, this.dataContainer, data);\n                }\n                this.onAdd(items);\n            };\n            /**\n             * Get Smartlist size\n             * @return {number} [the object size]\n             */\n            SmartList.prototype.getSize = function () {\n                var items = this.toArray(true);\n                return items.length;\n            };\n            return this.init(config);\n        },\n        /**\n         * require with Promise\n         * @param  {[type]} dep [description]\n         * @return {[type]}     [description]\n         */\n        requireWithPromise = function (dep, keepRequireContext) {\n            var def = new jQuery.Deferred();\n            if (keepRequireContext) {\n\n                dep.splice(0, 0, 'require');\n\n                require(dep, function (req) {\n                    def.resolve.call(this, req);\n                }, function (reason) {\n                    def.reject(reason);\n                });\n            } else {\n                require(dep, function () {\n                    def.resolve.apply(this, arguments);\n                }, function (reason) {\n                    def.reject(reason);\n                });\n            }\n            return def.promise();\n        },\n\n        castAsArray = function (values) {\n            if (values instanceof Object && !(values instanceof Array)) {\n                values = Object.keys(values).map(\n                    function (key) {\n                        return values[key];\n                    }\n                );\n            }\n            return values;\n        };\n\n    Api.register('SmartList', SmartList);\n    return {\n        SmartList: SmartList,\n        requireWithPromise: requireWithPromise,\n        castAsArray: castAsArray\n    };\n});\n","define('Core/ApplicationContainer', ['jquery', 'jsclass', 'Core/Api'], function (jQuery, coreApi) {\n    'use strict';\n    var instance = null,\n        AppContainer;\n    /**\n     * AppContainer object\n     */\n    AppContainer = new JS.Class({\n        /**\n         * Container initialisation\n         */\n        initialize: function () {\n            this.container = [];\n        },\n        /**\n         * Register a new application\n         * @param {object} applicationInfos  {\n         *                                       name:\"appname\",\n         *                                       instance:\"\",\n         *                                       state\n         *                                   }\n         */\n        register: function (applicationInfos) {\n            if (!jQuery.isPlainObject(applicationInfos)) {\n                coreApi.exception('AppContainerException', 60000, 'applicationInfos should be an object');\n            }\n            if (!applicationInfos.hasOwnProperty('name')) {\n                coreApi.exception('AppContainerException', 60001, 'applicationInfos should have a name property');\n            }\n            this.container.push(applicationInfos);\n        },\n        /**\n         * Gets application info by its name\n         * @param {type} name\n         * @returns {appInfos}\n         */\n        getByAppInfosName: function (name) {\n            var result = null;\n            jQuery.each(this.container, function (i, appInfos) {\n\n                if (appInfos.name === name) {\n                    result = appInfos;\n                    return false;\n                }\n                i = i + 1;\n            });\n            return result;\n        },\n        reset: function () {\n            this.container = [];\n        }\n    });\n    return {\n        getInstance: function () {\n            if (!instance) {\n                instance = new AppContainer();\n            }\n            return instance;\n        }\n    };\n});\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/ControllerManager', ['require', 'Core/Api', 'Core/ApplicationContainer', 'jquery', 'jsclass', 'Core/Utils'], function (require) {\n    'use strict';\n    var Api = require('Core/Api'),\n        jQuery = require('jquery'),\n        utils = require('Core/Utils'),\n        appContainer = require('Core/ApplicationContainer'),\n        controllerContainer = {},\n        shortNameMap = {},\n        controllerInstance = {},\n        enabledController = null,\n        exception = function (code, message) {\n            Api.exception('ControllerManagerException', code, message);\n        },\n        /**\n         *  Controller abstract class\n         *  @type {Object}\n         */\n        AbstractController = new JS.Class({\n            /**\n             * Controller contructor\n             * @return {AbstractController} [description]\n             */\n            initialize: function () {\n                this.state = 0;\n                this.enabled = false;\n                var appInfos = appContainer.getInstance().getByAppInfosName(this.appName);\n                this.mainApp = appInfos.instance;\n            },\n            /**\n             * Depencies loader\n             * @return {promise}\n             */\n            handleImport: function () {\n                var def = new jQuery.Deferred();\n                if (jQuery.isArray(this.config.imports) && this.config.imports.length) {\n                    utils.requireWithPromise(this.config.imports).done(def.resolve).fail(function (reason) {\n                        var error = {\n                            method: 'ControllerManager:handleImport',\n                            message: reason\n                        };\n                        def.reject(error);\n                    });\n                } else {\n                    def.resolve();\n                }\n                return def.promise();\n            },\n\n            beforeCall: function (callName) {\n                var dfd = new jQuery.Deferred(),\n                    self = this;\n\n                if (this.config.define !== undefined &&  this.config.define[callName] !== undefined) {\n                    utils.requireWithPromise(this.config.define[callName]).then(\n                        function () {\n                            dfd.resolve.call(self, require);\n                        },\n                        function (reason) {\n                            Api.exception.silent('ControllerManagerException', 15007, 'Something goes worng during the depencies loading of ' + callName, {service: callName, reason: reason, depencies: self.config.define[callName]});\n                            dfd.reject.call(self);\n                        }\n                    );\n                } else {\n                    dfd.resolve.call(self, false);\n                }\n\n                return dfd.promise();\n            },\n\n            /**\n             * Action automaticly call when the Controller is Enabled\n             * @return {false}\n             */\n            onEnabled: function () {\n                this.enabled = true;\n            },\n            /**\n             * Action automaticly call when the Controller is Disabled\n             * @return {false}\n             */\n            onDisabled: function () {\n                this.enabled = false;\n            },\n            /**\n             * Function used to call controller action\n             * @param  {String} action\n             * @param  {Mixed} params\n             * @return {false}\n             */\n            invoke: function (action, params) {\n                var actionName = action + 'Action';\n                if (typeof this[actionName] !== 'function') {\n                    exception(15001, actionName + ' Action Doesnt Exists in ' + this.getName() + ' Controller');\n                }\n                if (typeof this[actionName] !== 'function') {\n                    exception(15001, actionName + ' Action Doesnt Exists in ' + this.getName() + ' Cotroller');\n                }\n                try {\n                    this[actionName].apply(this, params);\n                } catch (e) {\n                    exception(15002, 'Error while executing [' + actionName + '] in ' + this.getName() + ' controller with message: ' + e);\n                }\n            }\n        }),\n        /**\n         * Change the current controller\n         * @param  {AbstractController} currentController\n         * @return {false}\n         */\n        updateEnabledController = function (currentController) {\n            if (currentController === enabledController) {\n                return;\n            }\n            if (enabledController) {\n                enabledController.onDisabled();\n            }\n            enabledController = currentController;\n            enabledController.onEnabled();\n        },\n        /**\n         * Compute the controller name used into ControllerContainer\n         * @param  {String} controllerName\n         * @return {String}\n         */\n        computeControllerName = function (controllerName) {\n            var ctlName = '',\n                controllerPos = -1;\n            if ('string' === typeof controllerName) {\n                controllerPos = controllerName.indexOf('Controller');\n            }\n            if (controllerPos !== -1) {\n                controllerName = controllerName.substring(0, controllerPos);\n                ctlName = controllerName.toLowerCase() + '.controller';\n            }\n            if (ctlName.length === 0) {\n                exception(15004, 'Controller name do not respect {name}Controller style declaration');\n            }\n            return ctlName;\n        },\n        /**\n         * Automatique controller initialiser before action call execution\n         * @param  {String} appName\n         * @param  {String} controllerName\n         * @param  {jQuery.Deferred} def\n         * @return {False}\n         */\n        initController = function (appName, controllerName, def) {\n            var currentController, fullControllerName = appName + '.' + computeControllerName(controllerName);\n            currentController = new controllerContainer[appName][controllerName]();\n            controllerInstance[fullControllerName] = currentController;\n            currentController.handleImport().then(function () {\n                currentController.onInit(require);\n                updateEnabledController(currentController);\n                def.resolve(currentController);\n            });\n        },\n        /**\n         * Return a short name for the controller. IE MainController will\n         * @param {string} controllerFullName\n         */\n        getControllerShortName = function (controllerFullName) {\n            var controllerName, controllerNameInfos = computeControllerName(controllerFullName);\n            controllerNameInfos = controllerNameInfos.split(\".\");\n            controllerName = controllerNameInfos[0];\n            return controllerName;\n        },\n        /**\n         * Register a new controller\n         * @param  {String} controllerName\n         * @param  {Object} ControllerDef\n         * @return {False}\n         */\n        registerController = function (controllerName, ControllerDef) {\n            var appName = ControllerDef.appName,\n                controllerShortName = getControllerShortName(controllerName),\n                Constructor = {};\n            if (false === ControllerDef.hasOwnProperty('appName')) {\n                exception(15003, 'Controller should be attached to an App');\n            }\n            if (ControllerDef.hasOwnProperty('initialize')) {\n                delete ControllerDef.initialize;\n            }\n            Constructor = new JS.Class(AbstractController, ControllerDef);\n            Constructor.define('initialize', (function (config) {\n                return function () {\n                    this.callSuper(config);\n                };\n            }(ControllerDef.config)));\n            Constructor.define('getName', (function (name) {\n                return function () {\n                    return name;\n                };\n            }(controllerName)));\n            if (!controllerContainer[appName]) {\n                controllerContainer[appName] = {};\n            }\n            controllerContainer[appName][controllerName] = Constructor;\n            /*Save controller shortname so that it can be used to load services*/\n            controllerShortName = controllerShortName.toLowerCase();\n            shortNameMap[appName + ':' + controllerShortName] = {\n                constructor: Constructor,\n                originalName: controllerName\n            };\n        },\n        /**\n         * Load controller and retrieve it if its already been loaded\n         * @param  {String} appName\n         * @param  {String} controllerName\n         * @return {Object}\n         */\n        loadController = function (appName, controllerName) {\n            var fullControllerName = appName + '.' + computeControllerName(controllerName),\n                def = jQuery.Deferred(),\n                cInstance = '';\n            if (!appName || typeof appName !== 'string') {\n                exception(15005, 'appName have to be defined as String');\n            }\n            cInstance = controllerInstance[fullControllerName];\n            if (cInstance) {\n                updateEnabledController(cInstance);\n                def.resolve(cInstance);\n            } else {\n                if (controllerContainer.hasOwnProperty(appName) && typeof controllerContainer[appName][controllerName] === 'function') {\n                    initController(appName, controllerName, def);\n                } else {\n                    utils.requireWithPromise([fullControllerName]).done(function () {\n                        initController(appName, controllerName, def);\n                    }).fail(def.reject);\n                }\n            }\n            return def.promise();\n        },\n        /*\n         * For every controller a short name is registered that is\n         * loadControllerByShortName allows us to find the controller by using this\n         **/\n        loadControllerByShortName = function (appName, shortControllerName) {\n            var dfd = new jQuery.Deferred(),\n                completeControllerName,\n                controllerInfos,\n                ctlFileName = appName + '.' + shortControllerName + '.controller';\n\n            if (!appName || typeof appName !== 'string') {\n                exception(15005, 'appName have to be defined as String');\n            }\n\n            if (!appName || typeof appName !== 'string') {\n                exception(15006, 'shortControllerName have to be defined as String');\n            }\n\n            controllerInfos = shortNameMap[appName + ':' + shortControllerName];\n\n            if (controllerInfos) {\n                return loadController(appName, controllerInfos.originalName);\n            }\n\n            /*first, because of the use shortName, we need load the controller*/\n            utils.requireWithPromise([ctlFileName]).done(function () {\n                completeControllerName = shortNameMap[appName + ':' + shortControllerName].originalName;\n                return loadController(appName, completeControllerName).done(dfd.resolve).fail(dfd.reject);\n            }).fail(dfd.reject);\n\n            return dfd.promise();\n        },\n        /**\n         * Return the controler corresponding at the current application actualy launched\n         * @param  {String} appName\n         * @return {False}\n         */\n        getAppControllers = function (appName) {\n            if (controllerContainer.hasOwnProperty(appName)) {\n                return controllerContainer[appName];\n            }\n            exception(15006, 'Controller Not Found');\n        },\n        /**\n         * Controller manager api exposition\n         * @type {Object}\n         */\n        ControllerManager = {\n            registerController: registerController,\n            loadController: loadController,\n            loadControllerByShortName: loadControllerByShortName,\n            getAppControllers: getAppControllers,\n            getAllControllers: function () {\n                return controllerContainer;\n            }\n        };\n    Api.register('ControllerManager', ControllerManager);\n    return ControllerManager;\n});\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * bb.ApplicationManager\n * Responsability\n *  - provide an application skeleton\n *  - What is an application\n *  Application handle views\n *  [-View 1]\n *  [-View 2]\n *  [-View 3]\n *  [-View 4]\n *  application recieves requests via route\n *\n *  /#layout/create ---> route is handled by Application Route\n *                      ---> Then controller is called\n *                          ---> Then the right method is invoked\n *                              --> The right template\n *\n *  Application can declare many controller BackBone Controllers\n *  Application Manager\n **/\ndefine('Core/ApplicationManager', ['require', 'BackBone', 'jsclass', 'jquery', 'underscore', 'Core/Utils', 'Core/ApplicationContainer', 'Core/Api', 'Core/ControllerManager'], function (require) {\n    'use strict';\n    /* Abstract Application with Interface */\n    /* dependence */\n    var jQuery = require('jquery'),\n        underscore = require('underscore'),\n        Api = require('Core/Api'),\n        Backbone = require('BackBone'),\n        Utils = require('Core/Utils'),\n        ControllerManager = require('Core/ControllerManager'),\n        AppDefContainer = {},\n        currentApplication = null,\n        config = null,\n        ApplicationManager = {},\n        AppContainer = require('Core/ApplicationContainer').getInstance(),\n        /**\n         * AbstractApplication\n         */\n        AbstractApplication = new JS.Class({\n            initialize: function (config) {\n                this.config = {};\n                this.state = 0;\n                underscore.extend(this, Backbone.Events);\n                this.config = jQuery.extend(true, this.config, config);\n            },\n\n            getMainRoute: function () {\n                return this.config.mainRoute;\n            },\n\n            exposeMenu: function () {\n                return;\n            },\n\n            dispatchToController: function (controller, action, params) {\n                var def = new jQuery.Deferred();\n                ControllerManager.loadController(this.getName(), controller).done(function (controller) {\n                    try {\n                        params = underscore.rest(params); //# cf http://underscorejs.org/#rest\n                        controller.invoke(action, params);\n                    } catch (reason) {\n                        def.reject(reason);\n                    }\n                }).fail(function (reason) {\n                    def.reject(reason.message);\n                });\n                return def.promise();\n            },\n\n            invokeControllerService: function (controller, service, params) {\n                var dfd = new jQuery.Deferred(),\n                    serviceName,\n                    self = this;\n\n                ControllerManager.loadControllerByShortName(this.getName(), controller).done(function (controller) {\n                    try {\n                        serviceName = service + \"Service\";\n                        controller.beforeCall(serviceName).then(\n                            function (req) {\n                                if (req) {\n                                    params.unshift(req);\n                                }\n                                try {\n                                    dfd.resolve(controller[serviceName].apply(controller, params));\n                                } catch (e) {\n                                    Api.exception.silent('InvokeServiceException', 15008, 'Something goes worng during the service ' + serviceName + ' execution', {controller: self.getName(), service: serviceName, error: e});\n                                }\n                            },\n                            function () {\n                                dfd.resolve(controller[serviceName].apply(controller, params));\n                            }\n                        );\n                    } catch (reason) {\n                        dfd.reject(reason);\n                    }\n                }).fail(function (reason) {\n                    dfd.reject(reason);\n                });\n                return dfd.promise();\n            },\n            /**\n             * @TODO finalise setter\n             *\n             * [setControllerMng description]\n             * @param {[type]} controllerMng [description]\n             */\n            setControllerMng: function (controllerMng) {\n                return controllerMng;\n            },\n\n            onInit: function () {\n                return;\n            },\n\n            onStart: function () {\n                this.trigger(this.getName() + ':onStart');\n            },\n\n            onStop: function () {\n                return;\n            },\n\n            onResume: function () {\n                return;\n            },\n\n            onError: function (e) {\n                Api.exception.silent('AbstractApplicationException', 1, 'error in[' + this.name + '] application', {error: e});\n            }\n        }),\n        /*url --> router --> appManager --> controller --> action*/\n        /**\n         * var app = getAppByRoute(route)\n         * app.invoke(controller:action)\n         *  - controller.init execute ation\n         *\n         **/\n        registerApplication = function (appname, AppDef) {\n            if ('string' !== typeof appname) {\n                throw \"ApplicationManager :appname should be a string\";\n            }\n            if ('object' !== typeof AppDef) {\n                throw 'ApplicationManager : appDef Is undefined';\n            }\n            var ApplicationConstructor = new JS.Class(AbstractApplication, AppDef);\n            /**\n             *\n             */\n            ApplicationConstructor.define('getName', (function (name) {\n                return function () {\n                    this.name = name;\n                    return name;\n                };\n            }(appname)));\n            if (AppDefContainer.hasOwnProperty(appname)) {\n                Api.exception('ApplicationManagerException', 50007, 'An application named [' + appname + '] already exists.');\n            }\n            AppDefContainer[appname] = ApplicationConstructor;\n        },\n\n        registerAppRoutes = function (routes) {\n            var def = new jQuery.Deferred();\n            return Utils.requireWithPromise(routes).done(function () {\n                ApplicationManager.trigger('routesLoaded');\n                def.resolve.apply(this, arguments);\n            }).fail(function (reason) {\n                def.reject(reason);\n            });\n        },\n\n        launchApplication = function (appname, config) {\n            var dfd = new jQuery.Deferred(),\n                applicationInfos = AppContainer.getByAppInfosName(appname),\n                Application = AppDefContainer[appname],\n                instance;\n            try {\n                config = config || {};\n                /* If the current application is called */\n                if (currentApplication && (currentApplication.getName() === appname)) {\n                    dfd.resolve(currentApplication);\n                } else {\n                    /** If app has not been loaded yet */\n                    if (!applicationInfos) {\n                        /** If app def can't be found */\n                        if (!Application) {\n                            return load(appname, config); //@TODO resolve 'load' was used before it was defined.\n                        }\n                        instance = new Application(config);\n                        /** stop currentApplication */\n                        applicationInfos = {\n                            instance: instance,\n                            name: appname\n                        };\n                        /** stop current application */\n                        if (currentApplication) {\n                            currentApplication.onStop();\n                        }\n\n                        applicationInfos.init = true;\n                        AppContainer.register(applicationInfos);\n\n                        applicationInfos.instance.onInit();\n                        applicationInfos.instance.onStart();\n                        instance = applicationInfos.instance;\n                    } else {\n                        currentApplication.onStop();\n                        /** application already exists call resume */\n\n                        if (applicationInfos.init !== true) {\n                            applicationInfos.instance.onInit();\n                            applicationInfos.instance.onStart();\n                            applicationInfos.init = true;\n                        } else {\n                            applicationInfos.instance.onResume();\n                        }\n\n                        instance = applicationInfos.instance;\n                    }\n                    currentApplication = instance;\n                    dfd.resolve(currentApplication);\n                }\n            } catch (e) {\n                Api.exception.silent('ApplicationManagerException', 500013, 'An exception as been caught during ' + appname + ' launching', {error: e});\n            }\n            return dfd.promise();\n        },\n\n        load = function (appname, config, launchApp) {\n            var def = new jQuery.Deferred(),\n                doLaunchApp = (typeof launchApp === \"boolean\") ? launchApp : true,\n                completeAppname = ['app.' + appname];\n            Utils.requireWithPromise(completeAppname).done(function () {\n                if (doLaunchApp) {\n                    launchApplication(appname, config).done(def.resolve);\n                } else {\n                    def.resolve.apply(arguments);\n                }\n            }).fail(function () {\n                def.reject('Application[' + completeAppname + '] can\\'t be found');\n            });\n            return def.promise();\n        },\n        /**\n         * At this stage we are sure that all apps declared in applicationConfigs was loaded\n         * And that the router was loaded\n         * We can then load the 'active' app\n         */\n        appsAreLoaded = function () {\n            var activeAppConf = config.applications[config.active] || {};\n            if (activeAppConf.hasOwnProperty(\"config\")) {\n                activeAppConf = activeAppConf.config;\n            }\n            return load(config.active, activeAppConf).then(function (app) {\n                Api.Mediator.publish('on:application:ready', app);\n                ApplicationManager.trigger('appIsReady', app); //use mediator\n            });\n        },\n\n        reset = function () {\n            //AppDefContainer = {};\n            currentApplication = null;\n            config = null;\n            ApplicationManager.off();\n            AppContainer.reset();\n        },\n\n        handleAppLoadingErrors = function (reason) {\n            ApplicationManager.trigger('appError', {\n                reason: reason\n            });\n        },\n\n        init = function (configuration) {\n            if (!configuration || !jQuery.isPlainObject(configuration)) {\n                Api.exception(\"ApplicationManagerException\", 50001, 'init expects a parameter one to be an object.');\n            }\n            var routePaths = [],\n                routeName = '',\n                appModuleName = [],\n                appPaths = [],\n                self = this;\n            config = configuration;\n            if (!config.hasOwnProperty('appPath')) {\n                Api.exception('ApplicationManagerException', 50002, 'InvalidAppConfig [appPath] key is missing');\n            }\n            if (!config.hasOwnProperty('applications')) {\n                Api.exception('ApplicationManagerException', 50003, 'InvalidAppConfig [applications] key is missing');\n            }\n            if (!config.hasOwnProperty(\"active\")) {\n                Api.exception('ApplicationManagerException', 50004, 'InvalidAppConfig [active] key is missing');\n            }\n            if (!jQuery.isPlainObject(configuration.applications)) {\n                Api.exception('ApplicationManagerException', 50005, 'InvalidAppConfig [applications] should be an object');\n            }\n            if (underscore.size(config.applications) === 0) {\n                Api.exception('ApplicationManagerException', 50006, 'InvalidAppConfig at least one application config should be provided');\n            }\n            jQuery.each(config.applications, function (appname, appConfig) {\n                appPaths.push(config.appPath + '/' + appname + '/main.js');\n                /* handle alt route path here */\n                routeName = appname + '.routes';\n                appModuleName.push(\"app.\" + appname);\n                if (appConfig.config.hasOwnProperty('routePath') && typeof appConfig.config.routePath === 'string') {\n                    routeName = appConfig.config.routePath;\n                }\n                routePaths.push(routeName);\n\n                if (appConfig.hasOwnProperty('scope')) {\n                    jQuery.each(appConfig.scope, function (scope, methods) {\n                        Api.Scope.subscribe(\n                            scope,\n                            function () {\n                                if (methods.open) {\n                                    self.invokeService(appname + '.' + methods.open);\n                                }\n                            },\n                            function () {\n                                if (methods.open) {\n                                    self.invokeService(appname + '.' + methods.close);\n                                }\n                            }\n                        );\n                    });\n                }\n            });\n            Utils.requireWithPromise(appPaths).then(jQuery.proxy(registerAppRoutes, null, routePaths)).done(appsAreLoaded).fail(handleAppLoadingErrors);\n        },\n\n        invoke = function (actionInfos, params) {\n            params = params || {};\n            if (!actionInfos || ('string' !== typeof actionInfos)) {\n                Api.exception('ApplicationManagerException', 50009, 'Application.invoke actionInfos should be a string');\n            }\n            actionInfos = actionInfos.split(':');\n            if (actionInfos.length !== 3) {\n                Api.exception('ApplicationManagerException', 50010, 'Invalid actionInfos. Valid format {appname}:{controllerName}:{controllerAction}');\n            }\n            var appPromise = launchApplication(actionInfos[0]);\n            appPromise.fail(function (reason) {\n                ApplicationManager.trigger(\"appError\", {\n                    reason: reason\n                });\n            });\n            appPromise.done(function (application) {\n                application.dispatchToController(actionInfos[1], actionInfos[2], params).fail(function (e) {\n                    ApplicationManager.trigger(\"appError\", {\n                        reason: e\n                    });\n                });\n            });\n        },\n\n        getAppInstance = function (appName, config) {\n            config = config || {};\n            if (typeof appName !== \"string\") {\n                Api.exception(\"ApplicationManagerException\", 50009, \"appName should be a string and config should be an object\");\n            }\n            var AppDef, appInstance = null,\n                applicationInfos;\n            applicationInfos = AppContainer.getByAppInfosName(appName);\n            if (applicationInfos && applicationInfos.hasOwnProperty(\"instance\")) {\n                appInstance = applicationInfos.instance;\n            } else {\n                AppDef = AppDefContainer[appName];\n                if (!AppDef) {\n                    return appInstance;\n                }\n                appInstance = new AppDef(config);\n                applicationInfos = {\n                    instance: appInstance,\n                    name: appName\n                };\n                AppContainer.register(applicationInfos);\n            }\n            return appInstance;\n        },\n\n        invokeService = function (servicePath) {\n            var dfd = new jQuery.Deferred(),\n                serviceInfos,\n                appname,\n                serviceName,\n                params,\n                appInstance,\n                controllerName;\n            if (!servicePath || typeof servicePath !== \"string\") {\n                Api.exception(\"ApplicationManagerException\", 50011, 'invokeService expects parameter one to be a string.');\n            }\n            params = jQuery.merge([], arguments);\n            params.shift();\n            serviceInfos = servicePath.split('.');\n            if (serviceInfos.length !== 3) {\n                Api.exception(\"ApplicationManagerException\", 50012, '');\n            }\n            appname = serviceInfos[0];\n            serviceName = serviceInfos[2];\n            controllerName = serviceInfos[1];\n            appInstance = getAppInstance(appname);\n            if (appInstance) {\n                appInstance.invokeControllerService(controllerName, serviceName, params).done(dfd.resolve).fail(dfd.reject);\n            } else {\n                /* We assume that the application has not been loaded yet */\n                load(appname, {}, false).done(function () {\n                    appInstance = getAppInstance(appname);\n                    appInstance.invokeControllerService(controllerName, serviceName, params).done(dfd.resolve).fail(dfd.reject);\n                }).fail(function (reason) {\n                    ApplicationManager.trigger(\"appError\", {\n                        reason: reason\n                    });\n                });\n            }\n            return dfd.promise();\n        };\n\n    ApplicationManager = {\n        registerApplication: registerApplication,\n        invoke: invoke,\n        invokeService: invokeService,\n        launchApplication: launchApplication,\n        init: init,\n        reset: reset\n    };\n    /* application as an Event emitter */\n    underscore.extend(ApplicationManager, Backbone.Events);\n    Api.register('ApplicationManager', ApplicationManager);\n    return ApplicationManager;\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Mediator', ['Core/Api'], function (Api) {\n    'use strict';\n\n    var Component = function topic(callback, context) {\n            this.callback = callback;\n            this.context = context;\n        },\n\n        Mediator = function mediator() {\n            this.topics = {};\n            this.publicated = {};\n            this.subscribe_once = {};\n        };\n\n    /**\n     * Component execution callback\n     * @return {undefined}\n     */\n    Component.prototype.execute = function componentExecution() {\n        if (this.context === undefined) {\n            this.callback.apply(undefined, arguments);\n        } else {\n            this.callback.apply(this.context, arguments);\n        }\n    };\n\n    /**\n     * Subscribe to a topic\n     * @param  {String}   topic    [description]\n     * @param  {Function} callback [description]\n     * @param  {Object}   context  [description]\n     * @return {undefined}\n     */\n    Mediator.prototype.subscribe = function mediatorSubscribe(topic, callback, context) {\n        var component = new Component(callback, context);\n\n        if (!this.topics.hasOwnProperty(topic)) {\n            this.topics[topic] = [];\n        }\n\n        this.topics[topic].push(component);\n\n        if (this.publicated.hasOwnProperty(topic)) {\n            component.execute.apply(component, this.publicated[topic].args);\n        }\n    };\n\n    /**\n     * Publish a topic and keep this topic in memory\n     * @return {undefined}\n     */\n    Mediator.prototype.subscribeOnce = function mediatorSubscribeOnce(topic, callback, context) {\n        if (!this.subscribe_once.hasOwnProperty(topic)) {\n            this.subscribe_once[topic] = [];\n        }\n\n        this.subscribe_once[topic].push(callback);\n        this.subscribe(topic, callback, context);\n    };\n\n    /**\n     * Unsubscribe to a topic\n     * @param  {String}   topic    [description]\n     * @param  {Function} callback [description]\n     * @param  {Object}   context  [description]\n     * @return {undefined}\n     */\n    Mediator.prototype.unsubscribe = function mediatorUnsubscribe(topic, callback) {\n        var i;\n\n        if (this.topics.hasOwnProperty(topic)) {\n            for (i = 0; i < this.topics[topic].length; i = i + 1) {\n                if (this.topics[topic][i].callback === callback) {\n                    this.topics[topic].splice(i, 1);\n                }\n            }\n        }\n    };\n\n    /**\n     * Publish a topic\n     * @return {undefined}\n     */\n    Mediator.prototype.publish = function mediatorPublish() {\n        var args = Array.prototype.slice.call(arguments),\n            topic = args.shift(),\n            i,\n            callback;\n\n        if (this.topics.hasOwnProperty(topic)) {\n            for (i = 0; i < this.topics[topic].length; i = i + 1) {\n                callback = this.topics[topic][i].callback;\n                try {\n                    this.topics[topic][i].execute.apply(this.topics[topic][i], args);\n                } catch (e) {\n                    Api.exception.silent(\n                        'MediatorException',\n                        12201,\n                        'Mediator caught an error when the topic : \"' + topic + '\" was published.',\n                        {\n                            topic: topic,\n                            context: this.topics[topic][i].context,\n                            callback: this.topics[topic][i].callback,\n                            args: args,\n                            error: e\n                        }\n                    );\n                }\n                if (this.subscribe_once.hasOwnProperty(topic)) {\n                    for (i = 0; i < this.subscribe_once[topic].length; i = i + 1) {\n                        if (this.subscribe_once[topic][i] === callback) {\n                            this.unsubscribe(topic, callback);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Publish a topic and keep this topic in memory\n     * @return {undefined}\n     */\n    Mediator.prototype.persistentPublish = function mediatorPersistentPublish() {\n        var args = Array.prototype.slice.call(arguments),\n            topic = args.shift();\n\n        this.publish.apply(this, arguments);\n\n        this.publicated[topic] = {\n            args: args\n        };\n    };\n\n    /**\n     * Remove a topic publish\n     * @param  {String} topic [description]\n     * @return {undefined}\n     */\n    Mediator.prototype.removePublish = function mediatorRemovePublication(topic) {\n        this.publicated[topic] = null;\n        delete this.publicated[topic];\n    };\n\n    Api.register('Mediator', new Mediator());\n});\n\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine(\n    'Core/RouteManager',\n    [\n        'jquery',\n        'Core/Api',\n        'BackBone',\n        'Core/ApplicationManager',\n        'jsclass'\n    ],\n    function (jQuery, Core, BackBone, ApplicationManager) {\n\n        'use strict';\n\n        //use the mediator to avoid a circular dependency\n        var routesCollections = {},\n\n            /**\n             * Router handle routes -> dispatch to application manager\n             * Application manager\n             **/\n            Router = new JS.Class({\n\n                /**\n                 * Router's constructor\n                 */\n                initialize: function () {\n                    var ExtRouter = BackBone.Router.extend({\n                        execute: function (callback, args) {\n                            if (typeof callback === 'function') {\n                                callback.apply(this, args);\n                            }\n                        }\n                    });\n\n                    this.routes = {};\n                    this.mainRouter = new ExtRouter({});\n                    this.handleApplicationLinks();\n                },\n\n                /**\n                 * Enable listener on click of every body a tags\n                 */\n                handleApplicationLinks: function () {\n                    /* si href ne rien faire */\n                    var self = this,\n                        url,\n                        routeInfos;\n\n                    jQuery(\"body\").delegate(\"a\", \"click\", function (e) {\n                        var action = jQuery(this).data(\"action\");\n                        if (\"string\" === typeof action) {\n                            e.preventDefault();\n                            routeInfos = routesCollections[action]; // layout:home\n                            if (!jQuery.isPlainObject(routeInfos)) {\n                                Core.exception('RouteManagerException', 500, 'handleApplicationLinks route ' + action + ' can\\'t be found');\n                            }\n\n                            url = self.buildLink(action);\n                            self.navigate(url);\n                        }\n                    });\n                },\n\n                /**\n                 * Builds with linkParams and returns the path according to routeName\n                 *\n                 * @param  {String} routeName\n                 * @param  {Object} linkParams\n                 *\n                 * @return {String}\n                 */\n                buildLink: function (routeName, linkParams) {\n                    var routeInfos,\n                        link;\n\n                    if (false === routesCollections.hasOwnProperty(routeName)) {\n                        Core.exception('RouteManagerException', 500, 'buildLink routeInfos can\\'t be found');\n                    }\n\n                    routeInfos = routesCollections[routeName];\n                    linkParams = linkParams || routeInfos.defaults;\n                    link = routeInfos.url;\n                    if (routeInfos.hasOwnProperty(\"defaults\")) {\n                        jQuery.each(routeInfos.defaults, function (key, value) {\n                            link = link.replace(key, value);\n                        });\n                    }\n\n                    return link;\n                },\n\n                /**\n                 * Navigate to path and invoke the right action\n                 *\n                 * @param  {String}  path\n                 * @param  {Boolean} triggerEvent\n                 * @param  {Boolean} updateRoute\n                 */\n                navigate: function (path, triggerEvent, updateRoute) {\n                    var conf = {\n                        trigger: triggerEvent || true,\n                        replace: updateRoute || true\n                    };\n\n                    if (path !== undefined) {\n                        this.mainRouter.navigate(path, conf);\n                    }\n                },\n\n                /**\n                 * It acts like the FrontController and invoke the right controller\n                 *\n                 * @param  {Object} actionInfos\n                 */\n                genericRouteHandler: function (actionInfos, url) {\n                    var params = jQuery.merge([], arguments);\n                    params.pop();\n\n                    Core.Mediator.publish('on:route:handling', url, actionInfos);\n\n                    ApplicationManager.invoke(actionInfos, params);\n                },\n\n                /**\n                 * Register routeInfos into BackBee router\n                 *\n                 * @param  {Object} routeInfos\n                 */\n                registerRoute: function (routeInfos) {\n                    var actionsName = routeInfos.completeName.split(':');\n\n                    this.mainRouter.route(routeInfos.url, routeInfos.completeName, jQuery.proxy(this.genericRouteHandler, this, actionsName[0] + ':' + routeInfos.action, routeInfos.url));\n                }\n\n            }),\n            routerInstance = new Router(),\n            RouteManager = {\n\n                /**\n                 * Initialize RouteManager and start BackBone history component\n                 *\n                 * @param  {Object} conf\n                 * @return {Object} self\n                 */\n                initRouter: function (conf) {\n                    conf = conf || {};\n                    BackBone.history.start(conf);\n\n                    return this;\n                },\n\n                /**\n                 * Register application's routes into RouteManager; a routeConfig object must look like:\n                 *\n                 * {\n                 *     prefix: 'YOUR_PREFIX', // optionnal\n                 *     routes: {\n                 *         home: {\n                 *             url: 'URL_PATTERN', // example: /foo/bar, you can also have dynamic parameter like: /foo/bar/1, /foo/bar/2, etc. the associated pattern is: /foo/bar/:page\n                 *             action: '',\n                 *             defaults: { // defaults key is optionnal\n                 *                  \":page\": 1\n                 *             }\n                 *         }\n                 *     }\n                 * }\n                 *\n                 * @param  {String} appname\n                 * @param  {Object} routeConf\n                 */\n                registerRoute: function (appname, routeConf) {\n                    var routes = routeConf.routes,\n                        prefix = '',\n                        url = '';\n\n                    if (!routeConf.hasOwnProperty('routes')) {\n                        Core.exception('RouteManagerException', 500, 'A routes key must be provided');\n                    }\n\n                    if (!jQuery.isPlainObject(routeConf.routes)) {\n                        Core.exception('RouteManagerException', 500, 'Routes must be an object');\n                    }\n\n                    if (typeof routeConf.prefix === 'string') {\n                        prefix = routeConf.prefix;\n                    }\n\n                    jQuery.each(routes, function (name, routeInfos) {\n                        if (!jQuery.isPlainObject(routeInfos)) {\n                            Core.exception('RouteManagerException', 500, name + ' route infos must be an object');\n                        }\n\n                        if (!routeInfos.hasOwnProperty('url')) {\n                            Core.exception('RouteManagerException', 500, name + ' route infos must have `url` property');\n                        }\n\n                        if (!routeInfos.hasOwnProperty('action')) {\n                            Core.exception('RouteManagerException', 500, name + ' route infos must have `action` property');\n                        }\n\n                        if (prefix.length !== 0) {\n                            url = (routeInfos.url.indexOf('/') === 0) ? routeInfos.url.substring(1) : routeInfos.url;\n                            routeInfos.url = prefix + '/' + url;\n                        }\n\n                        routeInfos.completeName = appname + ':' + name;\n\n                        routesCollections[routeInfos.completeName] = routeInfos;\n                        routerInstance.registerRoute(routeInfos);\n                    });\n                },\n\n                /**\n                 * Navigate to path and invoke the associated action (alias of this.navigateByPath() to maintain\n                 * compatibility)\n                 *\n                 * @param  {Object}  path\n                 * @param  {Boolean} triggerEvent\n                 * @param  {Boolean} updateRoute\n                 */\n                navigate: function (path, triggerEvent, updateRoute) {\n                    this.navigateByPath(path, triggerEvent, updateRoute);\n                },\n\n                /**\n                 * Navigate to path and invoke the associated action\n                 *\n                 * @param  {Object}  path\n                 * @param  {Boolean} triggerEvent\n                 * @param  {Boolean} updateRoute\n                 */\n                navigateByPath: function (path, triggerEvent, updateRoute) {\n                    routerInstance.navigate(path, triggerEvent, updateRoute);\n                },\n\n                /**\n                 * [navigateByName description]\n                 * @param  {String}  name\n                 * @param  {Boolean} triggerEvent\n                 * @param  {Boolean} updateRoute\n                 */\n                navigateByName: function (name, triggerEvent, updateRoute) {\n                    this.navigateByPath(routerInstance.buildLink(name), triggerEvent, updateRoute);\n                }\n            };\n\n        Core.register('RouteManager', RouteManager);\n\n        return RouteManager;\n    }\n);\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Exception', ['Core/Api', 'jsclass'], function () {\n    'use strict';\n\n    /**\n     * Exception is the base class for all BackBee toolbar exceptions\n     */\n    var Exception = new JS.Class({\n\n            Api: require('Core/Api'),\n\n            /**\n             * Construct the exception\n             */\n            initialize: function (name, message, code, params) {\n                this.name = name;\n                this.message = message;\n                this.code = code;\n                this.params = params;\n                this.stack = this.getStack();\n            },\n\n            /**\n             * Gets the stack trace\n             * @returns {array}\n             */\n            getStack: function () {\n                var err = new Error(this.name),\n                    cleanStack = [],\n                    stack,\n                    key;\n\n                if (err.stack) {\n                    stack = err.stack.split(\"\\n\");\n                    cleanStack = stack.slice(5);\n\n                    for (key in cleanStack) {\n                        if (cleanStack.hasOwnProperty(key)) {\n                            cleanStack[key] = this.parseStackLine(cleanStack[key]);\n                        }\n                    }\n                }\n\n                return cleanStack;\n            },\n\n\n            /**\n             * Function to stock the Exception in Api.get('errors') and Api.get('lastError')\n             * @param {Exception} error\n             */\n            pushError: function (error, Api) {\n                if (undefined === Api.get('errors')) {\n                    Api.set('errors', []);\n                }\n\n                Api.get('errors').push(error);\n                Api.set('lastError', error);\n            },\n\n            /**\n             * Function to parse a stak trace line\n             * @param {string} line  Should be something like <call>@<file>:<lineNumber>\n             * @returns {object}\n             */\n            parseStackLine: function (stackline) {\n                var regex = /^\\s*at\\s+([\\w\\W]+)\\(([\\w\\W]+\\.js)[\\w\\W]*:(\\d+):(\\d+)\\)/i,\n                    values = regex.exec(stackline),\n                    call = ((values && values[1]) ? values[1] : stackline),\n                    file = ((values && values[2]) ? values[2] : null),\n                    line = ((values && values[3]) ? values[3] : null),\n                    column = ((values && values[4]) ? values[4] : null);\n\n                return {\n                    column: column,\n                    line: line,\n                    file: file,\n                    call: call\n                };\n            }\n        }),\n\n        throwNewException = function (name, code, message, params) {\n            name = name || 'UnknowException';\n            code = code || 500;\n            message = message || 'No description found for this exception.';\n            params = params || {};\n\n            var expected = new Exception(name, message, code, params);\n            expected.pushError(expected, expected.Api);\n\n            throw 'Error n ' + code + ' ' + name + ': ' + message;\n        };\n\n    throwNewException.silent = function (name, code, message, params) {\n        try {\n            throwNewException(name, code, message, params);\n        } catch (e) {\n            return e;\n        }\n    };\n\n    require('Core/Api').register('exception', throwNewException);\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Scope', ['Core/Api', 'underscore'], function (Api, Under) {\n    'use strict';\n\n        /**\n         * Scope constructor\n         * @return {false}\n         */\n    var Scope = function scope() {\n            this.scopes = [];\n            Api.Mediator.subscribeOnce('on:application:ready', function () {\n                Api.Mediator.persistentPublish('scope:global:opening');\n            });\n        },\n\n        /**\n         * Open and  close scope\n         * @param  {Array} scopes\n         * @param  {boolean} opening\n         * @return {false}\n         */\n        toggle = function scopesToggle(scopes, opening) {\n            var i;\n            for (i = 0; i < scopes.length; i = i + 1) {\n                if (opening === true) {\n                    Api.Mediator.publish('scope:' + scopes[i].toLowerCase() + ':opening');\n                } else {\n                    Api.Mediator.publish('scope:' + scopes[i].toLowerCase() + ':closing');\n                }\n            }\n        },\n\n        /**\n         * Check if a scope is correctly define\n         * @param {Array} scopes\n         * @return {false}\n         */\n        checkScope = function scopeCheck(scopes) {\n            var i;\n            for (i = 0; i < scopes.length; i = i + 1) {\n                if ('string' !== typeof scopes[i]) {\n                    Api.exception('ScopeException', 12101, 'All scope have to be a string.');\n                }\n            }\n        };\n\n    /**\n     * Return true or false if the scope is open\n     * @return {boolean}\n     */\n    Scope.prototype.isOpen = function scopeIsOpen(scope) {\n        return -1 === Under.indexOf(this.scopes, scope) ? false : true;\n    };\n\n    /**\n     * Register new scope and close actually scopes open\n     * @return {false}\n     */\n    Scope.prototype.register = function scopeRegister() {\n        var openingScopes = Under.difference(arguments, this.scopes),\n            closingScopes = Under.difference(this.scopes, arguments);\n\n        checkScope(arguments);\n\n        toggle(closingScopes, false);\n        toggle(openingScopes, true);\n\n        this.scopes = Under.difference(this.scopes, closingScopes);\n        this.scopes = Under.union(this.scopes, openingScopes);\n    };\n\n    /**\n     * Open a scope\n     * @param  {String} scope\n     * @return {false}\n     */\n    Scope.prototype.open = function scopeOpen(scope) {\n        var index = Under.indexOf(this.scopes, scope);\n\n        checkScope([scope]);\n\n        if (-1 === index) {\n            toggle([scope], true);\n            this.scopes.push(scope);\n        }\n    };\n\n    /**\n     * Close a scope\n     * @param  {String} scope\n     * @return {false}\n     */\n    Scope.prototype.close = function scopeClose(scope) {\n        var index = Under.indexOf(this.scopes, scope);\n\n        checkScope([scope]);\n\n        if (-1 !== index) {\n            toggle([scope], false);\n            this.scopes = Under.without(this.scopes, scope);\n        }\n    };\n\n    /**\n     * Subscribe to scope\n     * @param  {String} scope\n     * @param  {Function} openingCallback\n     * @param  {Function} closingCallback\n     * @return {false}\n     */\n    Scope.prototype.subscribe = function scopeSuscribe(scope, openingCallback, closingCallback) {\n        var index = Under.indexOf(this.scopes, scope.toLowerCase());\n\n        if ('string' !== typeof scope || 'function' !== typeof openingCallback || 'function' !== typeof closingCallback) {\n            Api.exception('ScopeException', 12102, 'Scope subscription was incorrect.');\n        }\n\n        if (-1 !== index) {\n            try {\n                openingCallback.apply(undefined);\n            } catch (e) {\n                Api.exception.silent('ScopeException', 12103, 'Error while running Opening callback in scope \"' + scope + '\"\" with message: ' + e);\n            }\n        }\n\n        Api.Mediator.subscribe('scope:' + scope.toLowerCase() + ':opening', openingCallback);\n        Api.Mediator.subscribe('scope:' + scope.toLowerCase() + ':closing', closingCallback);\n    };\n\n    Api.register('Scope', new Scope());\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Config', ['require', 'Core/Api'], function (require) {\n    'use strict';\n\n    var Core = require('Core/Api'),\n\n        container = {},\n\n        injectCoreConfig = function (config) {\n            var key;\n            for (key in config) {\n                if (config.hasOwnProperty(key) && Core.hasOwnProperty(key)) {\n                    try {\n                        Core[key].init(config[key]);\n                    } catch (e) {\n                        Core.exception.silent('CoreConfigurationException', 12300, 'Config injection fail for ' + key + ' core object with message : ' + e);\n                    }\n                }\n            }\n        },\n\n        setImutable = function (obj) {\n            var key;\n\n            for (key in obj) {\n                if (obj.hasOwnProperty(key) && ('object' === typeof obj[key]) && obj[key] !== null) {\n                    setImutable(obj[key]);\n                }\n            }\n\n            Object.freeze(obj);\n        },\n\n        initConfig = function (config) {\n            if (config.hasOwnProperty('core')) {\n                injectCoreConfig(config.core);\n                delete config.core;\n            }\n\n            container = config;\n\n            setImutable(container);\n        },\n\n        find = function (sections, config) {\n            var section = sections.pop();\n\n            if (config.hasOwnProperty(section)) {\n                if (sections.length > 0) {\n                    return find(sections, config[section]);\n                }\n                return config[section];\n            }\n            return;\n        },\n\n        getConfig = function (namespace) {\n            var sections = namespace.split(':');\n\n            return find(sections.reverse(), container);\n        };\n\n\n    Core.register('initConfig', initConfig);\n    Core.register('config', getConfig);\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\n(function () {\n    'use strict';\n\n    define('Core', [\n        'Core/Api',\n        'Core/ApplicationManager',\n        'Core/Mediator',\n        'Core/RouteManager',\n        'Core/ControllerManager',\n        'Core/Utils',\n        'Core/Exception',\n        'Core/Scope',\n        'Core/Config'\n    ], function (Core) {\n        return Object.freeze(Core);\n    });\n}());\n","/*\r\n * Copyright (c) 2011-2013 Lp digital system\r\n *\r\n * This file is part of BackBee.\r\n *\r\n * BackBee is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * BackBee is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\r\n */\r\ndefine('Core/DriverHandler', ['underscore', 'jquery', 'jsclass'], function (us, jQuery) {\r\n    'use strict';\r\n\r\n    /**\r\n     *\r\n     * @type {JS}\r\n     */\r\n    var DriverHandler = new JS.Class({\r\n\r\n        /**\r\n         * Every available actions\r\n         * @type {Array}\r\n         */\r\n        AVAILABLE_ACTIONS: ['create', 'read', 'update', 'delete', 'patch', 'link'],\r\n\r\n        /**\r\n         * Contains every declared drivers\r\n         * @type {Object}\r\n         */\r\n        drivers: {},\r\n\r\n        /**\r\n         * the identifier of the default driver to use\r\n         * @type {String}\r\n         */\r\n        defaultDriverId: null,\r\n\r\n        /**\r\n         * Contains every declared 'type/action/drivers' mappings\r\n         * @type {Object}\r\n         */\r\n        mappings: {},\r\n\r\n        /**\r\n         * Checks if driver with id provided already added\r\n         * @param  {String}  id the driver identifier we want to check existence\r\n         * @return {Boolean} true if driver already added, else false\r\n         */\r\n        hasDriver: function (id) {\r\n            return us.contains(us.keys(this.drivers), id);\r\n        },\r\n\r\n        /**\r\n         * Add provided driver with id as key if it does not exist yet\r\n         * @param  {String} id     associated identifier of the driver we are adding\r\n         * @param  {Object} driver the driver to add\r\n         * @return {Object} self\r\n         */\r\n        addDriver: function (id, driver, isDefault) {\r\n            if (false === this.hasDriver(id)) {\r\n                this.drivers[id] = driver;\r\n            }\r\n\r\n            if (true === isDefault || null === this.defaultDriverId) {\r\n                this.defaultDriver(id);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns driver object if it is registered\r\n         * @param  {String} id the identifier of the driver we are looking for\r\n         * @return {Object}    the driver object if it exists, else null\r\n         */\r\n        getDriver: function (id) {\r\n            var driver = null;\r\n\r\n            if (this.hasDriver(id)) {\r\n                driver = this.drivers[id];\r\n            }\r\n\r\n            return driver;\r\n        },\r\n\r\n        /**\r\n         * Define the driver associated with provided id as default driver; it happens only if the driver exist\r\n         * @param  {String} id [description]\r\n         * @return {Object}    self\r\n         */\r\n        defaultDriver: function (id) {\r\n            if (true === this.hasDriver(id)) {\r\n                this.defaultDriverId = id;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Add 'type/action/drivers' map into DriverHandler; it defines by type which drivers to use\r\n         * for any action; note that this mapping is not a requirement and the fallback will use the\r\n         * default driver\r\n         * @param {String} type     type or namespace of your entity\r\n         * @param {Object} mappings\r\n         * @return {Object} DriverHandler\r\n         */\r\n        addActionDriverMapping: function (type, mappings) {\r\n            var row;\r\n\r\n            if (true === Array.isArray(mappings)) {\r\n                for (row in mappings) {\r\n                    if (mappings.hasOwnProperty(row)) {\r\n                        row = mappings[row];\r\n                        if (true === this.isValidActionDriverMapping(row)) {\r\n                            if (false === this.mappings.hasOwnProperty(type)) {\r\n                                this.mappings[type] = {};\r\n                            }\r\n\r\n                            this.mappings[type][row.action] = row;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * The mapping action/drivers row is valid if:\r\n         *     - row object has action property\r\n         *     - row object has drivers property; drivers property is array; drivers property is not empty\r\n         *     - row object strategy property is optionnal\r\n         * @param  {Object}  row the mapping action/drivers row\r\n         * @return {Boolean}     true if row has atleast action and drivers properties, else false\r\n         */\r\n        isValidActionDriverMapping: function (row) {\r\n            var driver;\r\n\r\n            if (false === row.hasOwnProperty('action') || false === row.hasOwnProperty('drivers')) {\r\n                return false;\r\n            }\r\n\r\n            if (false === us.contains(this.AVAILABLE_ACTIONS, row.action)) {\r\n                return false;\r\n            }\r\n\r\n            if (false === Array.isArray(row.drivers) || 0 === row.drivers.length) {\r\n                return false;\r\n            }\r\n\r\n            for (driver in row.drivers) {\r\n                if (row.drivers.hasOwnProperty(driver)) {\r\n                    driver = row.drivers[driver];\r\n                    if (false === this.hasDriver(driver)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Perform a create request\r\n         * @param  {String}   type     type/namespace of your entity\r\n         * @param  {Object}   data    contains every data required to create your entity\r\n         */\r\n        create: function (type, data) {\r\n            return this.doGenericAction('create', type, {data: data});\r\n        },\r\n\r\n        /**\r\n         * Perform a read request\r\n         * @param  {String}   type      type/namespace of your entity\r\n         * @param  {Object}   criteria\r\n         * @param  {Object}   orderBy\r\n         * @param  {Number}   start\r\n         * @param  {Number}   limit\r\n         */\r\n        read: function (type, criteria, orderBy, start, limit) {\r\n            return this.doGenericAction('read', type, this.formatData({}, criteria, orderBy, start, limit));\r\n        },\r\n\r\n        /**\r\n         * Perform an update request\r\n         * @param  {String}   type      type/namespace of your entity\r\n         * @param  {Object}   data\r\n         * @param  {Object}   criteria\r\n         * @param  {Object}   orderBy\r\n         * @param  {Number}   start\r\n         * @param  {Number}   limit\r\n         */\r\n        update: function (type, data, criteria, orderBy, start, limit) {\r\n            return this.doGenericAction('update', type, this.formatData(data, criteria, orderBy, start, limit));\r\n        },\r\n\r\n        /**\r\n         * Perform an delete request\r\n         * @param  {String}   type      type/namespace of your entity\r\n         * @param  {Object}   criteria\r\n         * @param  {Object}   orderBy\r\n         * @param  {Number}   start\r\n         * @param  {Number}   limit\r\n         */\r\n        delete: function (type, criteria, orderBy, start, limit) {\r\n            return this.doGenericAction('delete', type, this.formatData({}, criteria, orderBy, start, limit));\r\n        },\r\n\r\n        /**\r\n         * Perform an link request\r\n         * @param  {String}   type      type/namespace of your entity\r\n         * @param  {Object}   data\r\n         * @param  {Object}   criteria\r\n         * @param  {Object}   orderBy\r\n         * @param  {Number}   start\r\n         * @param  {Number}   limit\r\n         */\r\n        link: function (type, data, criteria, orderBy, start, limit) {\r\n            return this.doGenericAction('link', type, this.formatData(data, criteria, orderBy, start, limit));\r\n        },\r\n\r\n        /**\r\n         * Perform an patch request\r\n         * @param  {String}   type      type/namespace of your entity\r\n         * @param  {Object}   data\r\n         * @param  {Object}   criteria\r\n         * @param  {Object}   orderBy\r\n         * @param  {Number}   start\r\n         * @param  {Number}   limit\r\n         */\r\n        patch: function (type, data, criteria, orderBy, start, limit) {\r\n            return this.doGenericAction('patch', type, this.formatData(data, criteria, orderBy, start, limit));\r\n        },\r\n\r\n        /**\r\n         * Generate a well formated data object from criteria, orderBy,start and limit parameters\r\n         * @param  {String} type      type/namespace of your entity\r\n         * @param  {Object} criteria\r\n         * @param  {Object} orderBy\r\n         * @param  {Number} start\r\n         * @param  {Number} limit\r\n         * @return {Object}\r\n         */\r\n        formatData: function (data, criteria, orderBy, start, limit) {\r\n            return {\r\n                data: data,\r\n                criteria: criteria || {},\r\n                orderBy: orderBy || {},\r\n                start: start || 0,\r\n                limit: limit || null\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Generic way to find action/driver mapping with type and then call handle() on every valid drivers\r\n         * @param  {String}   action   the name of the action to execute\r\n         * @param  {String}   type     type/namespace of your entity\r\n         * @param  {Object}   data\r\n         * @param  {Function} callback\r\n         */\r\n        doGenericAction: function (action, type, data) {\r\n            var drivers = this.getDriversByTypeAndAction(type, action),\r\n                driver,\r\n                dfd = jQuery.Deferred(),\r\n                done = function (data, response) {\r\n                    dfd.resolve(data, response);\r\n                },\r\n                fail = function (e) {\r\n                    console.log(e);\r\n                    dfd.reject(e);\r\n                };\r\n\r\n            for (driver in drivers) {\r\n                if (drivers.hasOwnProperty(driver)) {\r\n                    this.drivers[drivers[driver]].handle(action, type, data).done(done).fail(fail);\r\n                }\r\n            }\r\n\r\n            return dfd.promise();\r\n        },\r\n\r\n        /**\r\n         * Allows us to retrieve drivers and its strategy by providing type and action\r\n         * @param  {String} type   type/namespace of your entity\r\n         * @param  {String} action the action we are looking for its drivers\r\n         * @return {Object}\r\n         */\r\n        getDriversByTypeAndAction: function (type, action) {\r\n            var drivers = null;\r\n\r\n            if (this.mappings.hasOwnProperty(type) && this.mappings[type].hasOwnProperty(action)) {\r\n                drivers = this.mappings[type][action].drivers;\r\n            }\r\n\r\n            if (null === drivers) {\r\n                drivers = [this.defaultDriverId];\r\n            }\r\n\r\n            return drivers;\r\n        },\r\n\r\n        /**\r\n         * Reset DriverHandler class\r\n         */\r\n        reset: function () {\r\n            this.drivers = {};\r\n            this.defaultDriverId = null;\r\n            this.mappings = {};\r\n        }\r\n    });\r\n\r\n    return new JS.Singleton(DriverHandler);\r\n});\r\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Renderer', ['require', 'nunjucks', 'Core', 'jquery', 'Core/Utils', 'jsclass'], function (require, nunjucks, Core) {\n    'use strict';\n\n    var jQuery = require('jquery'),\n\n        config = {},\n\n        instance,\n\n        Renderer = new JS.Class({\n            initialize: function () {\n                var error_tpl = config.error_tpl || '<p>Error while loading template</p>',\n                    placeholder = config.placeholder || '<p>Loading...</p>';\n                this.env = nunjucks.configure({ watch: false });\n                this.engine = nunjucks;\n                this.render_action = 'html';\n                this.error_msg = jQuery(error_tpl).clone();\n                this.placeholder = jQuery(placeholder);\n                this.functions = {};\n            },\n\n            getEngine: function () {\n                return this.engine;\n            },\n\n            addFilter: function (name, func, async) {\n                this.env.addFilter(name, func, async);\n            },\n\n            addFunction: function (name, func) {\n                if (typeof func === 'function') {\n                    this.functions[name] = func;\n                }\n            },\n\n            mergeParameters: function (params) {\n                var key;\n\n                if (!params) {\n                    params = {};\n                }\n\n                for (key in this.functions) {\n                    if (this.functions.hasOwnProperty(key)) {\n                        params[key] = this.functions[key];\n                    }\n                }\n\n                return params;\n            },\n\n            /**\n             * @todo: this seems to no work.\n             */\n            asyncRender: function (path, params, config) {\n                params = this.mergeParameters(params);\n                config = config || {};\n                config.placeholder = config.placeholder || this.placeholder;\n                config.action = config.action || 'html';\n                if (!path || typeof path !== \"string\") {\n                    throw 'Renderer:asyncRender [path] parameter should be a string';\n                }\n                require('Core/Utils').requireWithPromise(['text!' + path]).then(\n                    jQuery.proxy(this.onTemplateReady, this, config, params),\n                    jQuery.proxy(this.errorRenderer, this, config)\n                );\n\n                return jQuery(config.placeholder);\n            },\n\n            render: function (template, params) {\n                params = this.mergeParameters(params);\n                try {\n                    return this.engine.renderString(template, params);\n                } catch (e) {\n                    Core.exception('RenderException', 500, e.message, {engineException: e, template: template, params: params});\n                }\n            },\n\n            errorRenderer: function (config) {\n                jQuery(config.placeholder)[config.action](this.error_msg);\n            },\n\n            onTemplateReady: function (config, params, template) {\n                jQuery(config.placeholder)[config.action](this.engine.renderString(template, params));\n            }\n        }),\n\n        getInstance = function () {\n            if (instance === undefined) {\n                instance = new Renderer();\n            }\n            return instance;\n        },\n\n        initRenderer = function (conf) {\n            config = conf;\n        },\n\n        invokeMethod = function (method_name) {\n            return (function (instance) {\n                return function () {\n                    var args = Array.prototype.slice.call(arguments);\n                    return instance[method_name].apply(instance, args);\n                };\n            }(getInstance()));\n        },\n\n        ApiRender = {\n            init: initRenderer,\n            getEngine: invokeMethod('getEngine'),\n            render: invokeMethod('render'),\n            asyncRender: invokeMethod('asyncRender'),\n            addFilter: invokeMethod('addFilter'),\n            addFunction: invokeMethod('addFunction')\n        };\n\n    return ApiRender;\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Request', ['jsclass'], function () {\n    'use strict';\n\n    /**\n     * Request object\n     */\n    var Request = new JS.Class({\n\n        initialize: function () {\n            /**\n             * Uri of request\n             * @type {String}\n             */\n            this.url = '';\n            /**\n             * Method of request\n             * @type {String}\n             */\n            this.method = 'GET';\n            /**\n             * Data of request\n             * @type {Mixed}\n             */\n            this.data = null;\n            /**\n             * Headers of request\n             * @type {Object}\n             */\n            this.headers = {\n                'Content-Type': 'application/x-www-form-uriencoded'\n            };\n\n        },\n\n        /**\n         * Set url of request\n         * @param {String} url\n         * @returns {Object} Request\n         */\n        setUrl: function (url) {\n            this.url = url;\n\n            return this;\n        },\n        /**\n         * Set the method of request\n         * @param {String} method\n         * @returns {Object} Request\n         */\n        setMethod: function (method) {\n            this.method = method.toUpperCase();\n\n            return this;\n        },\n        /**\n         * @param {Mixed} data\n         * @returns {Object} Request\n         */\n        setData: function (data) {\n            this.data = data;\n\n            return this;\n        },\n        /**\n         * Set all headers in request\n         * @param {Object} headers\n         * @returns {Object} Request\n         */\n        setHeaders: function (headers) {\n            this.headers = headers;\n\n            return this;\n        },\n        /**\n         * Set one header with name and value\n         * @param {String} name\n         * @param {String} value\n         * @returns {Object} Request\n         */\n        addHeader: function (name, value) {\n            this.headers[name] = value;\n\n            return this;\n        },\n        /**\n         * Set content type of request\n         * @param {String} contentType\n         * @returns {Object} Request\n         */\n        setContentType: function (contentType) {\n            this.addHeader('Content-Type', contentType);\n            return this;\n        },\n        /**\n         * Get the url with query params\n         * @returns {String} url builded\n         */\n        getUrl: function () {\n            return this.url;\n        },\n        /**\n         * Get the content type of request\n         * @returns {String}\n         */\n        getContentType: function () {\n            return this.headers['Content-Type'];\n        },\n        /**\n         * GEt the method of request\n         * @returns {String}\n         */\n        getMethod: function () {\n            return this.method;\n        },\n        /**\n         * Get the data of request\n         * @returns {Mixed}\n         */\n        getData: function () {\n            return this.data;\n        },\n        /**\n         * Get header by key\n         * @param {String} key\n         * @returns {Object|null}\n         */\n        getHeader: function (key) {\n            return this.headers[key] || null;\n        },\n        /**\n         * Get the headers of request\n         * @returns {Object}\n         */\n        getHeaders: function () {\n            return this.headers;\n        }\n    });\n\n    return Request;\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/Response', ['jsclass'], function () {\n    'use strict';\n\n    /**\n     * Response object\n     */\n    var Response = new JS.Class({\n\n        /**\n         * Initialize of Response\n         */\n        initialize: function () {\n            /**\n            * Headers of Response\n            * @type {Object}\n            */\n            this.headers = {};\n\n            /**\n            * Mixed data value of Response\n            * @type {Mixed}\n            */\n            this.data = '';\n\n            /**\n            * Raw data of Response\n            * @type {String}\n            */\n            this.rawData = '';\n\n            /**\n            * Status code of Response\n            * @type {Number}\n            */\n            this.status = 200;\n\n            /**\n            * Status text of Response\n            * @type {String}\n            */\n            this.statusText = '';\n\n            /**\n            * Error text of Response\n            * @type {String}\n            */\n            this.errorText = '';\n        },\n\n        /**\n         * return all headers of Response\n         * @returns {Object}\n         */\n        getHeaders: function () {\n            return this.headers;\n        },\n\n        /**\n         * Return one header by key\n         * @param {String} key\n         * @returns {String|null}\n         */\n        getHeader: function (key) {\n            return this.headers[key] || null;\n        },\n\n        /**\n         * Return data, if data not set it\n         * will return data raw\n         * @returns {Mixed}\n         */\n        getData: function () {\n            if ('' === this.data) {\n                return this.rawData;\n            }\n\n            return this.data;\n        },\n\n        /**\n         * Return raw datas\n         * @returns {String}\n         */\n        getRawData: function () {\n            return this.rawData;\n        },\n\n        /**\n         * Return status code\n         * @returns {Number}\n         */\n        getStatus: function () {\n            return this.status;\n        },\n\n        /**\n         * Return status text\n         * @returns {String}\n         */\n        getStatusText: function () {\n            return this.statusText;\n        },\n\n        /**\n         * Return error text\n         * @returns {String}\n         */\n        getErrorText: function () {\n            return this.errorText;\n        },\n\n        getUidFromLocation: function () {\n            var locationHeader = this.getHeader('Location'),\n                res,\n                regex;\n\n            if (null === locationHeader) {\n                return null;\n            }\n\n            regex = new RegExp('[\\/]([a-f0-9]{32}$)');\n\n            res = regex.exec(locationHeader);\n\n            return res[1];\n        },\n\n        /**\n         * Get range from\n         *\n         * @returns {Numeric}\n         */\n        getRangeFrom: function () {\n            var rangeHeader = this.getHeader('Content-Range'),\n                res;\n            if (null === rangeHeader) {\n                return null;\n            }\n\n            res = rangeHeader.split('-');\n            if (res[0] === undefined) {\n                return null;\n            }\n\n            return parseInt(res[0], 10);\n        },\n\n        /**\n         * Get range to\n         *\n         * @returns {Numeric}\n         */\n        getRangeTo: function () {\n            var rangeHeader = this.getHeader('Content-Range'),\n                res,\n                res2;\n\n            if (null === rangeHeader) {\n                return null;\n            }\n\n            res = rangeHeader.split('/');\n            if (res[0] === undefined) {\n                return null;\n            }\n\n            res2 = res[0].split('-');\n            if (res2[1] === undefined) {\n                return null;\n            }\n\n            return parseInt(res2[1], 10);\n        },\n\n        /**\n         * Get range last\n         *\n         * @returns {Numeric}\n         */\n        getRangeTotal: function () {\n            var rangeHeader = this.getHeader('Content-Range'),\n                res;\n\n            if (null === rangeHeader) {\n                return null;\n            }\n\n            res = rangeHeader.split('/');\n            if (res[1] === undefined) {\n                return null;\n            }\n\n            return parseInt(res[1], 10);\n        },\n\n        /**\n         * Set all headers as object\n         * @param {Object} headers\n         * @returns Response\n         */\n        setHeaders: function (headers) {\n            this.headers = headers;\n\n            return this;\n        },\n\n        /**\n         * Add one header by name and value\n         * @param {String} name\n         * @param {String} value\n         * @returns {Response}\n         */\n        addHeader: function (name, value) {\n            this.headers[name] = value;\n\n            return this;\n        },\n\n        /**\n         * Set the data\n         * @param {String} data\n         * @returns {Response}\n         */\n        setData: function (data) {\n            this.data = data;\n\n            return this;\n        },\n\n        /**\n         * Set the raw data\n         * @param {String} rawData\n         * @returns {Response}\n         */\n        setRawData: function (rawData) {\n            this.rawData = rawData;\n\n            return this;\n        },\n\n        /**\n         * Set the status code\n         * @param {Number} status\n         * @returns {Response}\n         */\n        setStatus: function (status) {\n            this.status = status;\n\n            return this;\n        },\n\n        /**\n         * Set the status text\n         * @param {String} statusText\n         * @returns {Response}\n         */\n        setStatusText: function (statusText) {\n            this.statusText = statusText;\n\n            return this;\n        },\n\n        /**\n         * Set the error text\n         * @param {String} errorText\n         * @returns {Response}\n         */\n        setErrorText: function (errorText) {\n            this.errorText = errorText;\n\n            return this;\n        }\n    });\n\n    return Response;\n});\n\n","/*\n * Copyright (c) 2011-2013 Lp digital system\n *\n * This file is part of BackBee.\n *\n * BackBee is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * BackBee is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\n */\ndefine('Core/RequestHandler', ['Core/Api', 'jquery', 'underscore', 'BackBone', 'Core/Response', 'jsclass'], function (Api, jQuery, Underscore, Backbone, CoreResponse) {\n    'use strict';\n\n    /**\n     * RequestHandler object\n     */\n    var RequestHandler = new JS.Class({\n\n        /**\n         * Initialize of RequestHandler\n         */\n        initialize: function () {\n            Underscore.extend(this, Backbone.Events);\n        },\n\n        /**\n         * Send the request to the server and build\n         * a Response object\n         * @returns Response\n         */\n        send: function (request) {\n            var self = this,\n                dfd = jQuery.Deferred();\n\n            if (null !== request) {\n\n                Api.Mediator.publish('request:send:before', request);\n\n                jQuery.ajax({\n                    url: request.getUrl(),\n                    type: request.getMethod(),\n                    data: request.getData(),\n                    headers: request.getHeaders()\n                }).done(function (data, textStatus, xhr) {\n                    var response = self.buildResponse(\n                            xhr.getAllResponseHeaders(),\n                            data,\n                            xhr.responseText,\n                            xhr.status,\n                            textStatus,\n                            ''\n                        );\n\n                    Api.Mediator.publish('request:send:done', response);\n\n                    dfd.resolve(response.getData(), response);\n                }).fail(function (xhr, textStatus, errorThrown) {\n                    var response = self.buildResponse(\n                            xhr.getAllResponseHeaders(),\n                            '',\n                            xhr.responseText,\n                            xhr.status,\n                            textStatus,\n                            errorThrown\n                        );\n\n                    Api.Mediator.publish('request:send:fail', response);\n\n                    dfd.reject(response.getData(), response);\n                });\n            }\n\n            return dfd.promise();\n        },\n\n        /**\n         * Build the Response Object\n         * @param {String} headers\n         * @param {String} data\n         * @param {String} rawData\n         * @param {Number} status\n         * @param {String} statusText\n         * @param {String} errorText\n         */\n        buildResponse: function (headers, data, rawData, status, statusText, errorText) {\n            var Response = new CoreResponse();\n\n            this.buildHeaders(Response, headers);\n\n            Response.setData(data);\n            Response.setRawData(rawData);\n            Response.setStatus(status);\n            Response.setStatusText(statusText);\n            Response.setErrorText(errorText);\n\n            return Response;\n        },\n\n        /**\n         * Build String headers, split \\r to have all key/value\n         * and split each with \":\" for have a key and value\n         * and use addHeader function to set each header\n         * @param {Object} Response\n         * @param {String} headers\n         */\n        buildHeaders: function (Response, headers) {\n            var headersSplit,\n                header,\n                name,\n                value,\n                key,\n                identifierPos;\n\n            headersSplit = headers.split('\\r');\n            for (key in headersSplit) {\n                if (headersSplit.hasOwnProperty(key)) {\n                    header = headersSplit[key];\n                    identifierPos = header.indexOf(':');\n                    if (-1 !== identifierPos) {\n                        name = header.substring(0, identifierPos).trim();\n                        value = header.substring(identifierPos + 1).trim();\n                        Response.addHeader(name, value);\n                    }\n                }\n            }\n        }\n    });\n\n    return new JS.Singleton(RequestHandler);\n});\n\n","/*\r\n * Copyright (c) 2011-2013 Lp digital system\r\n *\r\n * This file is part of BackBee.\r\n *\r\n * BackBee is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * BackBee is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with BackBee. If not, see <http://www.gnu.org/licenses/>.\r\n */\r\ndefine('Core/RestDriver', ['Core/Request', 'Core/RequestHandler', 'URIjs/URI', 'Core', 'jsclass'], function (Request, RequestHandler, URI, Core) {\r\n    'use strict';\r\n\r\n    var RestDriver = new JS.Class({\r\n            /**\r\n             * RestDriver constructor, we initialize the Request object with a default content type\r\n             */\r\n            initialize: function () {\r\n                /**\r\n                 * The REST api base url (example: /rest/1/)\r\n                 * @type {String}\r\n                 */\r\n                this.baseUrl = ''; // retrieve it from core?\r\n\r\n                /**\r\n                 * Request object used to build every REST request\r\n                 * @type {Object}\r\n                 */\r\n                this.request = null;\r\n\r\n                // Lack of authentification process to add to request header\r\n            },\r\n\r\n            /**\r\n             * BaseUrl property setter\r\n             * @param {String} baseUrl the driver new base url\r\n             */\r\n            setBaseUrl: function (baseUrl) {\r\n                this.baseUrl = baseUrl;\r\n            },\r\n\r\n            /**\r\n             * Handle every user request and decide what kind of HTTP request to build depending on action and return\r\n             * the response provided by server\r\n             * @param  {String} action the action to execute ('read', 'create', 'delete', 'update', 'patch', 'link')\r\n             * @param  {String} type   your entity namespace\r\n             * @param  {Object} data  data contains request limit, start, criteria and data\r\n             * @return {Object}        the response data provided by performing your request\r\n             */\r\n            handle: function (action, type, data) {\r\n                var url = new URI(this.baseUrl),\r\n                    range;\r\n\r\n                this.request = new Request();\r\n                this.request.headers = {};\r\n                this.request.setContentType('application/json');\r\n                this.request.addHeader('Accept', 'application/json');\r\n\r\n                url.segment(type);\r\n\r\n                if ('read' === action) {\r\n                    this.request.setMethod('GET');\r\n                    this.computeCriteria(url, data);\r\n                } else if ('update' === action || 'patch' === action || 'link' === action || 'delete' === action) {\r\n                    this.request.setMethod('update' === action ? 'put' : action);\r\n                    this.computeCriteria(url, data);\r\n\r\n                    if (data.hasOwnProperty('data')) {\r\n                        if ('patch' === action) {\r\n                            this.request.setData(this.computePatchOperations(data.data));\r\n                        } else {\r\n                            this.request.setData(data.data);\r\n                        }\r\n                    }\r\n                } else if ('create' === action) {\r\n                    this.request.setMethod('POST');\r\n                    this.computeCriteria(url, data);\r\n\r\n                    if (data.hasOwnProperty('data')) {\r\n                        this.request.setData(data.data);\r\n                    }\r\n                }\r\n\r\n                if (data.hasOwnProperty('limit') && null !== data.limit) {\r\n                    range = (data.hasOwnProperty('start') ? data.start : '0') + ',' + data.limit;\r\n                    this.request.addHeader('Range',  range);\r\n                }\r\n\r\n                this.computeOrderBy(url, data);\r\n\r\n                this.request.setUrl(url.normalize().toString());\r\n\r\n                if (null !== this.request.getData()) {\r\n                    this.request.setData(JSON.stringify(this.request.getData()));\r\n                }\r\n\r\n                Core.Mediator.publish('rest:send:before', this.request);\r\n\r\n                return RequestHandler.send(this.request);\r\n            },\r\n\r\n            /**\r\n             * Checks if data has criteria and add them to url\r\n             * @param  {Object} url   object which must be type of URI which represent the request url\r\n             * @param  {Object} data\r\n             * @return {Object}       self\r\n             */\r\n            computeCriteria: function (url, data) {\r\n                var criteria = data.hasOwnProperty('criteria') ? data.criteria : null,\r\n                    criterion;\r\n\r\n                if (null === criteria) {\r\n                    return this;\r\n                }\r\n\r\n                for (criterion in criteria) {\r\n                    if (criteria.hasOwnProperty(criterion)) {\r\n                        if ('uid' === criterion || 'id' === criterion) {\r\n                            url.segment(criteria[criterion].toString());\r\n                        } else {\r\n                            url.addSearch(criterion + (typeof criteria[criterion] === 'object' ? '[]' : ''), criteria[criterion]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Checks if data has orderBy and add them to url\r\n             * @param  {Object} url   object which must be type of URI which represent the request url\r\n             * @param  {Object} data\r\n             * @return {Object}       self\r\n             */\r\n            computeOrderBy: function (url, data) {\r\n                var order;\r\n\r\n                if (data.hasOwnProperty('orderBy') && typeof data.orderBy === 'object') {\r\n                    for (order in data.orderBy) {\r\n                        if (data.orderBy.hasOwnProperty(order)) {\r\n                            url.addSearch('order_by[' + order + ']', data.orderBy[order]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return this;\r\n            },\r\n\r\n            /**\r\n             * Format request data to match with path operations standard (RFC 6902: http://tools.ietf.org/html/rfc6902)\r\n             * @param  {Object} data patch raw data\r\n             * @return {Object}       formatted patch data\r\n             */\r\n            computePatchOperations: function (data) {\r\n                var operations = [],\r\n                    key;\r\n\r\n                for (key in data) {\r\n                    if (data.hasOwnProperty(key)) {\r\n                        operations.push({\r\n                            op: 'replace',\r\n                            path: '/' + key,\r\n                            value: data[key]\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return operations;\r\n            }\r\n        }),\r\n        rest = new RestDriver();\r\n\r\n    return {\r\n\r\n        /**\r\n         * Handle every user request and decide what kind of HTTP request to build depending on action and return\r\n         * the response provided by server\r\n         * @param  {String} action the action to execute ('read', 'create', 'delete', 'update', 'patch', 'link')\r\n         * @param  {String} type   your entity namespace\r\n         * @param  {Object} data   data contains request limit, start, criteria and data\r\n         * @return {Object}        the response data provided by performing your request\r\n         */\r\n        handle: function (action, type, data) {\r\n            return rest.handle(action, type, data);\r\n        },\r\n\r\n        /**\r\n         * BaseUrl property setter\r\n         * @param {String} baseUrl the new base url\r\n         */\r\n        setBaseUrl: function (baseUrl) {\r\n            rest.setBaseUrl(baseUrl);\r\n\r\n            return this;\r\n        }\r\n    };\r\n});\n"]}